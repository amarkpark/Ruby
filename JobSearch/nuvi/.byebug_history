next
doc.collect_namespaces.length
doc.collect_namespaces
doc
next
xmldata.collect_namespaces
names.length
names = xml.collect_namespaces
xml.collect_namespaces
xml
next
y newhash
newhash
next
end
xmldata.to_a
xmldata.inspect
xmldata.text
xmldata.innerhtml
newhash
newhash.length
%w[type forum forum_title].each {|n| newhash[n] = xmldata.css(n).text}
newhash.length
newhash = {}
newhash.length
newhash
%w[type forum forum_title].each {|n| newhash[n] = xmldata.css(n).text}
xmldata.css("post_url")
xmldata.css(".name")
xmldata.css("#name")
%w[type name discussion_title].each_with_object
xmldata = xml.elements.children
xml.elements.children[0]
xml.elements.children[1]
y newhash.inspect
hash.inspect
xml.elements.children.each {|child| newhash[child.name] = child.text}
xml.elements.children.each {|child| newhash << (child.name, child.text)}
xml.elements.children.each {|child| puts "#{child.name} => #{chilxml.elements.children.each {|child| newhash << (child.name, child.text)}d.text}"}
xml.elements.children[1].name
xml.elements.children[1]
xml.elements.children.at(1).text
xml.elements.children.at(title).text
xml.elements.children.length
next
  Ë
xml.elements.children.find('name')
xml.elements.children.map
xml.elements.children.search('name')
xml.elements.children.search('name').map.length
xml.elements.children.search('name').map
xml.elements.children.names
xml.elements.children.keys
xml.keys
xml.elements.children.length
xml.elements.children
xml.element
xml.elements.length
xml.elements
xml.keys.length
xml.keys
xml
exit
filestream.to_xml
xmldoc.elements.length
xmldoc.elements
xmldoc.elements.first.attributes
ary.inspect
xmldoc.elements.each {|e| ary << e.attributes}
ary = []
xmldoc.elements.each {|e| hash1 << e.attributes}
hash1 = {}
ary.type
ary.length
ary
ary = xmldoc.elements.each {|e| ary << e.attributes}
ary = xmldoc.elements.attributes
filestream
xmldoc.elements.(1).text
xmldoc.elements.[1].text
xmldoc.elements.at(1).text
xmldoc.elements.first.text
xmldoc.elements.first.name
xmldoc.elements.first.key
xmldoc.elements.each.keys.inspect
xmldoc.elements.each.keys
xmldoc.Type?
xmldoc.elements.first
ary.inspect
a
xmldoc.elements.each {|e| ary << e.name}
ary = []
ary = xmldoc.elements.each.name
%w[xmldoc.elements.each.name.to_a]
%w[xmldoc.elements.each.name]
%w(xmldoc.elements.name)
xmldoc.elements
filestream
xmldoc.type
xmldoc.keys
xmldoc
exit
response
